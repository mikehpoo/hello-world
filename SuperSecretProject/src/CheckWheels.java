/**
 * This class will take wheels generated by RandomiseWheels and test if they have a win line or not
 * For time being win line will mean 2 or more of the same symbols in a row anywhere on a wheel
 * 
 *  (x,x,x,x,x) = biggest win
 *  (x,x,x,x,Y) OR (Y,x,x,x,x,)= 2nd biggest win
 * 	(x,x,x,Y,W) OR (Y,x,x,x,Y) OR (Y,W,x,x,x) = third biggest win
 *  (x,x,Y,W,Z) OR (Y,x,x,Y,Z) OR (Y,Z,x,x,Y) OR (Y,W,Z,x,x) = smallest win
 * 
 */


/**
 * @author mikey
 *
 */
public class CheckWheels {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method

	}
	
	public static double checkWheel(int[][] wheels){		
		double NumberOfMatches = numberOfMatchesOnLine(wheels[0][0],wheels[1][0],wheels[2][0],wheels[3][0],wheels[4][0]);	
		double Modifier = getModifier(wheels[0][0]);
		if(NumberOfMatches == -1){
			return -1;
		}
		return Modifier * NumberOfMatches;
	}
	
	public static int numberOfMatchesOnLine(int i,int j, int k, int l, int m){
		if(i == j){
			if(j == k){
				if(k == l){
					if(l == m){
						return 4;
					}
					return 3;
				}
				return 2;
			}			
			return 1;
		}
		else{
			return -1;
		}
	}
	
	public static double getModifier(int num){
		double modifier = 0;
		switch(num){
		case 0 :
			modifier = 1.0;
			break;
		case 1 :
			modifier = 2.0;
			break;
		case 2 :
			modifier = 3.0;
			break;
		case 3 :
			modifier = 4.0;
			break;
		case 4 :
			modifier = 5.0;
			break;		
		}		
		return modifier;
	}
}
